package main

import (
	"encoding/json"
	"fmt"
	"net/http"
	"os"
	"regexp"
)

type ScanResult struct {
	Vulnerability string `json:"vulnerability"`
	Details       string `json:"details"`
}

func main() {
	if len(os.Args) < 2 {
		fmt.Println("Usage: go run scanner.go <url>")
		return
	}

	url := os.Args[1]
	var results []ScanResult

	// Validate URL
	if !isValidURL(url) {
		fmt.Println("Invalid URL")
		return
	}

	// Example vulnerability detection
	resp, err := http.Get(url + "' OR '1'='1")
	if err == nil && resp.StatusCode == 200 {
		results = append(results, ScanResult{
			Vulnerability: "SQL Injection",
			Details:       "Detected with ' OR '1'='1 payload",
		})
	}

	// Return results as JSON
	jsonOutput, _ := json.Marshal(results)
	fmt.Println(string(jsonOutput))
}

// Validate URL
func isValidURL(url string) bool {
	re := regexp.MustCompile(`^(https?://)?([\w\-]+\.)+[a-z]{2,6}(/.*)?$`)
	return re.MatchString(url)
}
